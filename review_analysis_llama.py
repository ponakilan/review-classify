# -*- coding: utf-8 -*-
"""review_analysis_llama.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bhl-InC205agGlt_G0MSOiy0xexwTOly
"""

import json
import tqdm

drug = "drug_reviews.json"

with open(drug, 'r', encoding="utf8") as file:
    data = json.load(file)
print(len(data))

from langchain_community.chat_models import ChatOllama

model = ChatOllama(model="llama3.1:8b", temperature=0)

classify_prompt = """
Please classify the following review into one of the following categories: Positive, Negative, or Neutral.
The output should be strictly in JSON format as shown below:
"sentiment": "<positive/negative/neutral>"
Only curly braces should prefix or sufix the above format. No other characters.

Review: {review}
"""

model_response_list = []
for i in tqdm.tqdm(range(len(data))):
    review = data[i]["comment"]
    prompt = classify_prompt.format(review=review)

    try:
        response = model.invoke(prompt)
        model_response = response.content.strip()
        model_response_list.append(model_response)

        try:
            classification = json.loads(model_response)
            if all(key in classification for key in ['sentiment']):
                data[i]["sentiment"] = classification["sentiment"]
            else:
                data[i]["sentiment"] = "Unknown"

        except json.JSONDecodeError:
            print(f"Failed to parse JSON: {model_response}")
            data[i]["sentiment"] = "Unknown"

    except Exception as e:
        print(f"Error classifying tweet: {e}")
        data[i]["sentiment"] = "Unknown"

classify_prompt = """
 Extract the key points from the following review, providing each point as a bullet point in a clear and concise manner.
 Just give the key points like what went wrong or what was good.
 Don't add any extra sentences before or after that. If it bad, why? If it is good, why? Be very concise.
 Review: {review}
 Be very very concise and clear. Only focus on the main things.
"""

model_response_list = []
for i in tqdm.tqdm(range(len(data))):
    review = data[i]["comment"]
    prompt = classify_prompt.format(review=review)

    try:
        response = model.invoke(prompt)
        model_response = response.content.strip()
        model_response_list.append(model_response)

        data[i]["key_point"] = model_response

    except Exception as e:
        print(f"Error classifying tweet: {e}")
        data[i]["key_point"] = "Unknown"

import pickle

with open("reviews_llama_iter_2.pkl", "wb") as file:
    pickle.dump(data, file)
    print("Data saved to reviews_llama_iter_1.pkl.")
